import java.util.*;
import java.lang.String;

public class Students
{
    public static void main(String[] args)
    {
        Scanner input = new Scanner(System.in);
        HashMap<Integer, Person>Names = new HashMap<>();
        Person tab[] = new Person[30];
        for(int i=0; i<tab.length; i++)
        {
            tab[i] = new Person();
        }
        int counter = -1;

        while(input.hasNextLine())
        {
            int iterator = 0;
            String indexA = "";
            String text = input.nextLine();
            if(text.equals("stop")) break;
            while(text.charAt(iterator)!='.')
            {
                indexA += text.charAt(iterator);
                iterator++;
            }
            int spaces = 0;
            String name = "";
            String surname = "";
            Integer indexB=Integer.parseInt(indexA);
            for(int i=iterator+2; i<text.length(); i++)
            {
                if(text.charAt(i)==32) spaces++;
                if(spaces==0)
                {
                    surname += text.charAt(i);
                }
                if(spaces==1)
                {
                    name += text.charAt(i);
                }
            }
            counter++;
            name = name.toUpperCase();
            surname = surname.toUpperCase();
            tab[counter].name = name;
            tab[counter].surname = surname;
            Names.put(indexB, tab[counter]);
        }
        LinkedHashMap<String, Integer>Names1 = new LinkedHashMap<>();
        for(HashMap.Entry<Integer, Person> enter : Names.entrySet())
        {
            int counter1=0;
            Person value = enter.getValue();
            String baseName = value.name;
            boolean repeat = false;
            for(HashMap.Entry<String, Integer> enter1 : Names1.entrySet())
            {
                String value1 = enter1.getKey();
                if(baseName.equals(value1)) repeat=true;
            }
            if(repeat) continue;
            for(HashMap.Entry<Integer, Person> enter2 : Names.entrySet())
            {
                Person value1 = enter2.getValue();
                String name = value1.name;
                if(baseName.equals(name)) counter1++;
            }
            Names1.put(baseName, counter1);
        }

        LinkedHashMap<String, Integer> sortedNames = sortMap(Names1);
        for(HashMap.Entry<String, Integer> enter3 : sortedNames.entrySet())
        {
            String name = enter3.getKey();
            Integer howManyPerson = enter3.getValue();
            System.out.println(name+" "+howManyPerson);
        }
    }
    public static LinkedHashMap<String, Integer> sortMap(LinkedHashMap<String, Integer> map)
    {
        List<Map.Entry<String, Integer>> Names = new LinkedList<>(map.entrySet());

        Collections.sort(Names, new Comparator<Map.Entry<String, Integer>>()
        {
            public int compare(Map.Entry<String, Integer> e1, Map.Entry<String, Integer> e2)
            {
                if(e1.getValue()<e2.getValue()) return 1;
                else if(e1.getValue()>e2.getValue()) return -1;
                else return 0;
            }
        });

        LinkedHashMap<String, Integer> result = new LinkedHashMap<>();

        for(Map.Entry<String, Integer> enter : Names)
        {
            result.put(enter.getKey(), enter.getValue());
        }

        return result;
    }
}
